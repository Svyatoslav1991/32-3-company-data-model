// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enterprise.proto

#include "enterprise.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr Enterprise::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        legaladdress_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        industry_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        foundationyear_{0},
        internationalbusiness_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Enterprise::Enterprise(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct EnterpriseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnterpriseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnterpriseDefaultTypeInternal() {}
  union {
    Enterprise _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnterpriseDefaultTypeInternal _Enterprise_default_instance_;
static ::_pb::Metadata file_level_metadata_enterprise_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_enterprise_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_enterprise_2eproto = nullptr;
const ::uint32_t TableStruct_enterprise_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::Enterprise, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::Enterprise, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Enterprise, _impl_.foundationyear_),
    PROTOBUF_FIELD_OFFSET(::Enterprise, _impl_.legaladdress_),
    PROTOBUF_FIELD_OFFSET(::Enterprise, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::Enterprise, _impl_.industry_),
    PROTOBUF_FIELD_OFFSET(::Enterprise, _impl_.internationalbusiness_),
    3,
    0,
    1,
    2,
    4,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 13, -1, sizeof(::Enterprise)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_Enterprise_default_instance_._instance,
};
const char descriptor_table_protodef_enterprise_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\020enterprise.proto\"y\n\nEnterprise\022\026\n\016foun"
    "dationYear\030\001 \002(\005\022\024\n\014legalAddress\030\002 \002(\t\022\014"
    "\n\004name\030\003 \002(\t\022\020\n\010industry\030\004 \001(\t\022\035\n\025intern"
    "ationalBusiness\030\005 \001(\010"
};
static ::absl::once_flag descriptor_table_enterprise_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_enterprise_2eproto = {
    false,
    false,
    141,
    descriptor_table_protodef_enterprise_2eproto,
    "enterprise.proto",
    &descriptor_table_enterprise_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_enterprise_2eproto::offsets,
    file_level_metadata_enterprise_2eproto,
    file_level_enum_descriptors_enterprise_2eproto,
    file_level_service_descriptors_enterprise_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_enterprise_2eproto_getter() {
  return &descriptor_table_enterprise_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_enterprise_2eproto(&descriptor_table_enterprise_2eproto);
// ===================================================================

class Enterprise::_Internal {
 public:
  using HasBits = decltype(std::declval<Enterprise>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Enterprise, _impl_._has_bits_);
  static void set_has_foundationyear(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_legaladdress(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_industry(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_internationalbusiness(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static bool MissingRequiredFields(const HasBits& has_bits) {
    return ((has_bits[0] & 0x0000000b) ^ 0x0000000b) != 0;
  }
};

Enterprise::Enterprise(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Enterprise)
}
inline PROTOBUF_NDEBUG_INLINE Enterprise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        legaladdress_(arena, from.legaladdress_),
        name_(arena, from.name_),
        industry_(arena, from.industry_) {}

Enterprise::Enterprise(
    ::google::protobuf::Arena* arena,
    const Enterprise& from)
    : ::google::protobuf::Message(arena) {
  Enterprise* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, foundationyear_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, foundationyear_),
           offsetof(Impl_, internationalbusiness_) -
               offsetof(Impl_, foundationyear_) +
               sizeof(Impl_::internationalbusiness_));

  // @@protoc_insertion_point(copy_constructor:Enterprise)
}
inline PROTOBUF_NDEBUG_INLINE Enterprise::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        legaladdress_(arena),
        name_(arena),
        industry_(arena) {}

inline void Enterprise::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, foundationyear_),
           0,
           offsetof(Impl_, internationalbusiness_) -
               offsetof(Impl_, foundationyear_) +
               sizeof(Impl_::internationalbusiness_));
}
Enterprise::~Enterprise() {
  // @@protoc_insertion_point(destructor:Enterprise)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Enterprise::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.legaladdress_.Destroy();
  _impl_.name_.Destroy();
  _impl_.industry_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Enterprise::Clear() {
// @@protoc_insertion_point(message_clear_start:Enterprise)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.legaladdress_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.industry_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000018u) {
    ::memset(&_impl_.foundationyear_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.internationalbusiness_) -
        reinterpret_cast<char*>(&_impl_.foundationyear_)) + sizeof(_impl_.internationalbusiness_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Enterprise::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 43, 2> Enterprise::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Enterprise, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Enterprise_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // required int32 foundationYear = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Enterprise, _impl_.foundationyear_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.foundationyear_)}},
    // required string legalAddress = 2;
    {::_pbi::TcParser::FastSS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.legaladdress_)}},
    // required string name = 3;
    {::_pbi::TcParser::FastSS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.name_)}},
    // optional string industry = 4;
    {::_pbi::TcParser::FastSS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.industry_)}},
    // optional bool internationalBusiness = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Enterprise, _impl_.internationalbusiness_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.internationalbusiness_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // required int32 foundationYear = 1;
    {PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.foundationyear_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // required string legalAddress = 2;
    {PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.legaladdress_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // required string name = 3;
    {PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional string industry = 4;
    {PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.industry_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kRawString | ::_fl::kRepAString)},
    // optional bool internationalBusiness = 5;
    {PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.internationalbusiness_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\12\0\14\4\10\0\0\0"
    "Enterprise"
    "legalAddress"
    "name"
    "industry"
  }},
};

::uint8_t* Enterprise::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Enterprise)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // required int32 foundationYear = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_foundationyear(), target);
  }

  // required string legalAddress = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_legaladdress();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "Enterprise.legalAddress");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // required string name = 3;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "Enterprise.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string industry = 4;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_industry();
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(_s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormat::SERIALIZE,
                                "Enterprise.industry");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional bool internationalBusiness = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_internationalbusiness(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Enterprise)
  return target;
}

::size_t Enterprise::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Enterprise)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // required string legalAddress = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_legaladdress());
    }

    // required string name = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_name());
    }

  }
  // optional string industry = 4;
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_industry());
  }

  // required int32 foundationYear = 1;
  if (cached_has_bits & 0x00000008u) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_foundationyear());
  }

  // optional bool internationalBusiness = 5;
  if (cached_has_bits & 0x00000010u) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Enterprise::_class_data_ = {
    Enterprise::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Enterprise::GetClassData() const {
  return &_class_data_;
}

void Enterprise::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Enterprise*>(&to_msg);
  auto& from = static_cast<const Enterprise&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Enterprise)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_legaladdress(from._internal_legaladdress());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_industry(from._internal_industry());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.foundationyear_ = from._impl_.foundationyear_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.internationalbusiness_ = from._impl_.internationalbusiness_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Enterprise::CopyFrom(const Enterprise& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Enterprise)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Enterprise::IsInitialized() const {
  if (_Internal::MissingRequiredFields(_impl_._has_bits_)) {
    return false;
  }
  return true;
}

::_pbi::CachedSize* Enterprise::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Enterprise::InternalSwap(Enterprise* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.legaladdress_, &other->_impl_.legaladdress_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.industry_, &other->_impl_.industry_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.internationalbusiness_)
      + sizeof(Enterprise::_impl_.internationalbusiness_)
      - PROTOBUF_FIELD_OFFSET(Enterprise, _impl_.foundationyear_)>(
          reinterpret_cast<char*>(&_impl_.foundationyear_),
          reinterpret_cast<char*>(&other->_impl_.foundationyear_));
}

::google::protobuf::Metadata Enterprise::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_enterprise_2eproto_getter, &descriptor_table_enterprise_2eproto_once,
      file_level_metadata_enterprise_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
